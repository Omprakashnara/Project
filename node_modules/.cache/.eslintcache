[{"/Users/saichandanakoganti/Downloads/GoogleMaps/src/index.js":"1","/Users/saichandanakoganti/Downloads/GoogleMaps/src/App.js":"2","/Users/saichandanakoganti/Downloads/GoogleMaps/src/Home.js":"3","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/Mainweather.js":"4","/Users/saichandanakoganti/Downloads/GoogleMaps/src/SignUp.js":"5","/Users/saichandanakoganti/Downloads/GoogleMaps/src/LoginPage.js":"6","/Users/saichandanakoganti/Downloads/GoogleMaps/src/Navigation.js":"7","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/App1.js":"8","/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeStatus.js":"9","/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeToggle.js":"10","/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeCommands.js":"11","/Users/saichandanakoganti/Downloads/GoogleMaps/src/Content.js":"12","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/search/api.js":"13","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/search/search.js":"14","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/current-weather/current-weather.js":"15","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/forecast/forecast.js":"16","/Users/saichandanakoganti/Downloads/GoogleMaps/src/Toggle.js":"17"},{"size":334,"mtime":1713513704000,"results":"18","hashOfConfig":"19"},{"size":1577,"mtime":1713643694000,"results":"20","hashOfConfig":"19"},{"size":1524,"mtime":1713513704000,"results":"21","hashOfConfig":"19"},{"size":780,"mtime":1714141560000,"results":"22","hashOfConfig":"19"},{"size":2976,"mtime":1713513704000,"results":"23","hashOfConfig":"19"},{"size":1926,"mtime":1713513704000,"results":"24","hashOfConfig":"19"},{"size":5699,"mtime":1714141182000,"results":"25","hashOfConfig":"19"},{"size":1494,"mtime":1713643830000,"results":"26","hashOfConfig":"19"},{"size":194,"mtime":1713513704000,"results":"27","hashOfConfig":"19"},{"size":508,"mtime":1713513704000,"results":"28","hashOfConfig":"19"},{"size":577,"mtime":1713513704000,"results":"29","hashOfConfig":"19"},{"size":219,"mtime":1713513704000,"results":"30","hashOfConfig":"19"},{"size":478,"mtime":1713513706000,"results":"31","hashOfConfig":"19"},{"size":2634,"mtime":1713644108000,"results":"32","hashOfConfig":"19"},{"size":1680,"mtime":1713513706000,"results":"33","hashOfConfig":"19"},{"size":5316,"mtime":1713513706000,"results":"34","hashOfConfig":"19"},{"size":312,"mtime":1713513706000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vxjpfj",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saichandanakoganti/Downloads/GoogleMaps/src/index.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/App.js",["91","92","93"],[],"// App.js\nimport React, { useState } from 'react';\nimport SignUp from './SignUp';\nimport LoginPage from './LoginPage';\nimport Navigation from './Navigation';\nimport Mainweather from './weather/Mainweather.js'\n\nimport Home from './Home.js';\nfunction App() {\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    \n  const [currentPage, setCurrentPage] = useState('Home');\n\n  const[Homebutton,setHomebutton]=useState(null);\n\n\n  const handleNavigation = (page) => {\n    setCurrentPage(page);\n  };\n  const handleHomepage=()=>{\n   \n      if(Homebutton==='Signup')\n      {\n        handleNavigation('SignUp')\n      }\n      else{\n        handleNavigation('LoginPage')\n      }\n      \n  }\n  \n\n  return (\n    <div>\n      \n       {currentPage==='Home' && <Home onNavigate={(page) => handleNavigation(page)} Homebutton={Homebutton} setHomebutton={setHomebutton}/>}\n       \n       {console.log(\"clicked button: \",Homebutton)}\n        {currentPage === 'SignUp' && <SignUp formData={formData} setFormData={setFormData}  onNavigate={(page) => handleNavigation(page)} />}\n\n   \n      {currentPage === 'LoginPage'&& <LoginPage userData={formData}\n      onNavigate={\n        () => {handleNavigation('Navigation')}\n        } />}\n      \n      {currentPage=='Navigation' && <Navigation onNavigate={(page) => handleNavigation(page)}/>} \n      {currentPage=='Mainweather' && <Mainweather  onNavigate={(page) => handleNavigation(page)}/>}\n      \n    </div>\n  );\n}\n\nexport default App;","/Users/saichandanakoganti/Downloads/GoogleMaps/src/Home.js",["94","95","96","97"],[],"\nimport React from 'react';\nimport './stylesheet.css'; \n\nfunction Home({onNavigate,HomeButton,setHomebutton}) {\n\n    const backgroundImageStyle = {\n        backgroundImage: 'url(\"https://media.tenor.com/b6FE6drZPbQAAAAd/earth-spin-galaxy.gif\")',\n       positon:'fixed',\n       top:'0',\n       left:'0',\n       width:'100%',\n       height:'100%',\n        \n      };\n      function clickedLogin(){\n          \n          onNavigate('LoginPage')\n      }\n      function clickedSignin(){\n       \n        onNavigate('SignUp')\n\n      }\n    \n  return (\n    <div className='Forimage'>\n      <header className=\"header\">\n        <nav className=\"navbar\">\n          <h2 className=\"logo\"><a href=\"#\">Navigate</a></h2>\n          <input type=\"checkbox\" id=\"menu-toggle\" />\n          <label htmlFor=\"menu-toggle\" id=\"hamburger-btn\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n              <path d=\"M3 12h18M3 6h18M3 18h18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n            </svg>\n          </label>\n          \n          <div className='buttons'>\n          <button onClick={clickedLogin}><a href=\"#\" className=\"signup\">Login</a></button>\n            <button onClick={clickedSignin}><a href=\"#\" className=\"signup\">Sign Up</a></button>\n          </div>\n        </nav>\n      </header>\n      <section className=\"hero-section\">\n        <div className=\"hero\">\n          <h2>Discover and Explore</h2>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/Mainweather.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/SignUp.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/LoginPage.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/Navigation.js",["98","99","100","101"],["102","103"],"\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Flex,\n  HStack,\n  IconButton,\n  Input,\n  SkeletonText,\n  Text,\n} from '@chakra-ui/react'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport DarkModeToggle from './DarkModeToggle';\nimport DarkModeCommands from './DarkModeCommands';\nimport DarkModeStatus from './DarkModeStatus';\nimport Content from './Content';\nimport './style.css';\n\nimport { FaLocationArrow, FaTimes } from 'react-icons/fa'\n\nimport {\n  useJsApiLoader,\n  GoogleMap,\n  Marker,\n  Autocomplete,\n  DirectionsRenderer,\n} from '@react-google-maps/api'\nimport { useRef, useState } from 'react'\n\nconst center = { lat: 48.8584, lng: 2.2945 }\n\nfunction Navigation({onNavigate}) {\n  const [currentPage, setCurrentPage] = useState('Navigation');\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places'],\n  })\n\n  const [map, setMap] = useState(/** @type google.maps.Map */ (null))\n  const [directionsResponse, setDirectionsResponse] = useState(null)\n  const [distance, setDistance] = useState('')\n  const [duration, setDuration] = useState('')\n  const [darkMode, setDarkMode] = useState(false)\n\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const originRef = useRef()\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const destiantionRef = useRef()\n\n  if (!isLoaded) {\n    return <SkeletonText />\n  }\n\n  async function calculateRoute() {\n    if (originRef.current.value === '' || destiantionRef.current.value === '') {\n      return\n    }\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService()\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n    })\n    setDirectionsResponse(results)\n    setDistance(results.routes[0].legs[0].distance.text)\n    setDuration(results.routes[0].legs[0].duration.text)\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null)\n    setDistance('')\n    setDuration('')\n    originRef.current.value = ''\n    destiantionRef.current.value = ''\n  }\nfunction handle(){\n onNavigate('Mainweather')\n}\nconst handleback = () => {\n  onNavigate('Home');\n};\n  /*function onNavigate(){\n    handleNavigation('weatherupdate')\n  console.log('Its inside the navigation function after login')\n  }\n  const handleNavigation = (page) => {\n    console.log(\"Im inside naviagte page and page value after clicking weather button: \", page)\n    setCurrentPage(page);\n  };*/\n  return (\n    <Flex\n      position='relative'\n      flexDirection='column'\n      alignItems='center'\n      h='100vh'\n      w='100vw'\n    >\n      <Box position='absolute' left={0} top={0} h='100%' w='100%'>\n        {/* Google Map Box */}\n        <ChakraProvider>\n      <div className={darkMode ? 'dark' : 'light'}>\n        <div className=\"navbar\">\n          <DarkModeToggle darkMode={darkMode} setDarkMode={setDarkMode} />\n          <DarkModeStatus />\n        </div>\n        <Content\n          darkMode={darkMode}\n          map={map}\n          setMap={setMap}\n          directionsResponse={directionsResponse}\n          setDirectionsResponse={setDirectionsResponse}\n          distance={distance}\n          setDistance={setDistance}\n          duration={duration}\n          setDuration={setDuration}\n          originRef={originRef}\n          destinationRef={destiantionRef}\n          calculateRoute={calculateRoute}\n          clearRoute={clearRoute}\n        />\n        <div className=\"map-container\">\n          {isLoaded && (\n\n<GoogleMap\ncenter={center}\nzoom={15}\nmapContainerStyle={{\n  width: '100%',\n  height: '700px',\n  filter: darkMode ? 'invert(1)' : 'none', // Apply filter for dark mode\n}}\nonLoad={map => setMap(map)}\n>\n<Marker position={center} />\n{directionsResponse && (\n  <DirectionsRenderer directions={directionsResponse} />\n)}\n</GoogleMap>\n)}\n</div>\n</div>\n</ChakraProvider>\n\n      </Box>\n      <Box\n        p={4}\n        borderRadius='lg'\n        m={4}\n        bgColor='white'\n        shadow='base'\n        minW='container.md'\n        zIndex='1'\n      >\n        <HStack spacing={2} justifyContent='space-between'>\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input type='text' placeholder='Origin' ref={originRef} />\n            </Autocomplete>\n          </Box>\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input\n                type='text'\n                placeholder='Destination'\n                ref={destiantionRef}\n              />\n            </Autocomplete>\n          </Box>\n\n          <ButtonGroup>\n            <Button colorScheme='pink' type='submit' onClick={calculateRoute}>\n              Calculate Route\n            </Button>\n            <IconButton\n              aria-label='center back'\n              icon={<FaTimes />}\n              onClick={clearRoute}\n            />\n          </ButtonGroup>\n          <label className='style1'>\n                    <input type=\"button\"  onClick={handleback} />Back\n                </label>\n          \n        </HStack>\n        <button className='wstyle' onClick={handle}>Weather</button>\n        <HStack spacing={4} mt={4} justifyContent='space-between'>\n          <Text>Distance: {distance} </Text>\n          <Text>Duration: {duration} </Text>\n          <IconButton\n            aria-label='center back'\n            icon={<FaLocationArrow />}\n            isRound\n            onClick={() => {\n              map.panTo(center)\n              map.setZoom(15)\n            }}\n          />\n        </HStack>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Navigation","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/App1.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeStatus.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeToggle.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/DarkModeCommands.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/Content.js",["104","105"],[],"import React from 'react';\nimport DarkModeStatus from './DarkModeStatus';\nimport DarkModeCommands from './DarkModeCommands';\n\nconst Content = () => (\n  <div className=\"content\">\n   \n  </div>\n);\n\nexport default Content;\n","/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/search/api.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/search/search.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/current-weather/current-weather.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/forecast/forecast.js",[],[],"/Users/saichandanakoganti/Downloads/GoogleMaps/src/Toggle.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":26,"column":9,"nodeType":"108","messageId":"109","endLine":26,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":53,"column":19,"nodeType":"112","messageId":"113","endLine":53,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":54,"column":19,"nodeType":"112","messageId":"113","endLine":54,"endColumn":21},{"ruleId":"106","severity":1,"message":"114","line":7,"column":11,"nodeType":"108","messageId":"109","endLine":7,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":30,"column":32,"nodeType":"117","endLine":30,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":39,"column":42,"nodeType":"117","endLine":39,"endColumn":73},{"ruleId":"115","severity":1,"message":"116","line":40,"column":45,"nodeType":"117","endLine":40,"endColumn":76},{"ruleId":"106","severity":1,"message":"118","line":13,"column":26,"nodeType":"108","messageId":"109","endLine":13,"endColumn":37},{"ruleId":"106","severity":1,"message":"119","line":15,"column":8,"nodeType":"108","messageId":"109","endLine":15,"endColumn":24},{"ruleId":"106","severity":1,"message":"120","line":34,"column":10,"nodeType":"108","messageId":"109","endLine":34,"endColumn":21},{"ruleId":"106","severity":1,"message":"121","line":34,"column":23,"nodeType":"108","messageId":"109","endLine":34,"endColumn":37},{"ruleId":"122","severity":2,"message":"123","line":60,"column":35,"nodeType":"108","messageId":"124","endLine":60,"endColumn":41,"suppressions":"125"},{"ruleId":"122","severity":2,"message":"123","line":65,"column":19,"nodeType":"108","messageId":"124","endLine":65,"endColumn":25,"suppressions":"126"},{"ruleId":"106","severity":1,"message":"127","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"119","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},"no-unused-vars","'handleHomepage' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'backgroundImageStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'extendTheme' is defined but never used.","'DarkModeCommands' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","no-undef","'google' is not defined.","undef",["128"],["129"],"'DarkModeStatus' is defined but never used.",{"kind":"130","justification":"131"},{"kind":"130","justification":"131"},"directive",""]