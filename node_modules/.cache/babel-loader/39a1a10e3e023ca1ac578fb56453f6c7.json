{"ast":null,"code":"import{useState}from\"react\";import{AsyncPaginate}from\"react-select-async-paginate\";import{GEO_API_URL,geoApiOptions}from\"./api\";/*const Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n  console.log(\"inirial serach value: \" , search)\r\n  useEffect(() => {\r\n    // Load initial options when the component is first mounted\r\n    loadOptions(\"\");\r\n  }, []);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    console.log(\"THis is called without typing\")\r\n    console.log(\"input value is \", inputValue)\r\n    console.log(`url : ${GEO_API_URL}/cities?namePrefix=${inputValue}`)\r\n    const response = await fetch(\r\n          `${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,\r\n          geoApiOptions\r\n      );\r\n      const response_1 = await response.json();\r\n      if( !Array.isArray(response)){\r\n                return { options: [] };\r\n            }\r\n      return {\r\n            \r\n          options: response_1.data.map((city) => {\r\n              return {\r\n                  value: `${city.latitude} ${city.longitude}`,\r\n                  label: `${city.name}, ${city.countryCode}`,\r\n              };\r\n          }),\r\n      };\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    console.log(\"Data changed: \", searchData)\r\n    setSearch(searchData);\r\n    //loadOptions(searchData)\r\n    onSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;*/import{jsx as _jsx}from\"react/jsx-runtime\";const Search=_ref=>{let{onSearchChange}=_ref;const[search,setSearch]=useState(null);const loadOptions=async inputValue=>{const response=await fetch(\"\".concat(GEO_API_URL,\"/cities?namePrefix=\").concat(inputValue),geoApiOptions);const response_1=await response.json();return{options:response_1.data.map(city=>{return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\", \").concat(city.countryCode)};})};};const handleOnChange=searchData=>{setSearch(searchData);onSearchChange(searchData);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for city\",debounceTimeout:600,value:search,onChange:handleOnChange,loadOptions:loadOptions})});};export default Search;","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsx","_jsx","Search","_ref","onSearchChange","search","setSearch","loadOptions","inputValue","response","fetch","concat","response_1","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","handleOnChange","searchData","children","placeholder","debounceTimeout","onChange"],"sources":["/Users/saichandanakoganti/Downloads/GoogleMaps/src/weather/components/search/search.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { GEO_API_URL,geoApiOptions } from \"./api\";\r\n\r\n/*const Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n  console.log(\"inirial serach value: \" , search)\r\n  useEffect(() => {\r\n    // Load initial options when the component is first mounted\r\n    loadOptions(\"\");\r\n  }, []);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    console.log(\"THis is called without typing\")\r\n    console.log(\"input value is \", inputValue)\r\n    console.log(`url : ${GEO_API_URL}/cities?namePrefix=${inputValue}`)\r\n    const response = await fetch(\r\n          `${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,\r\n          geoApiOptions\r\n      );\r\n      const response_1 = await response.json();\r\n      if( !Array.isArray(response)){\r\n                return { options: [] };\r\n            }\r\n      return {\r\n            \r\n          options: response_1.data.map((city) => {\r\n              return {\r\n                  value: `${city.latitude} ${city.longitude}`,\r\n                  label: `${city.name}, ${city.countryCode}`,\r\n              };\r\n          }),\r\n      };\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    console.log(\"Data changed: \", searchData)\r\n    setSearch(searchData);\r\n    //loadOptions(searchData)\r\n    onSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;*/\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    const response = await fetch(\r\n          `${GEO_API_URL}/cities?namePrefix=${inputValue}`,\r\n          geoApiOptions\r\n      );\r\n      const response_1 = await response.json();\r\n      return {\r\n          options: response_1.data.map((city) => {\r\n              return {\r\n                  value: `${city.latitude} ${city.longitude}`,\r\n                  label: `${city.name}, ${city.countryCode}`,\r\n              };\r\n          }),\r\n      };\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n\r\n\r\n \r\n  return (\r\n<div >\r\n\r\n      \r\n    <AsyncPaginate\r\n      placeholder=\"Search for city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n     \r\n       />\r\n     \r\n     \r\n    </div>\r\n    \r\n  );\r\n \r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,WAAW,CAACC,aAAa,KAAQ,OAAO,CAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAjDA,OAAAC,GAAA,IAAAC,IAAA,yBAmDA,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAW,WAAW,CAAG,KAAO,CAAAC,UAAU,EAAK,CACxC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CACnBb,WAAW,wBAAAa,MAAA,CAAsBH,UAAU,EAC9CT,aACJ,CAAC,CACD,KAAM,CAAAa,UAAU,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxC,MAAO,CACHC,OAAO,CAAEF,UAAU,CAACG,IAAI,CAACC,GAAG,CAAEC,IAAI,EAAK,CACnC,MAAO,CACHC,KAAK,IAAAP,MAAA,CAAKM,IAAI,CAACE,QAAQ,MAAAR,MAAA,CAAIM,IAAI,CAACG,SAAS,CAAE,CAC3CC,KAAK,IAAAV,MAAA,CAAKM,IAAI,CAACK,IAAI,OAAAX,MAAA,CAAKM,IAAI,CAACM,WAAW,CAC5C,CAAC,CACL,CAAC,CACL,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIC,UAAU,EAAK,CACrCnB,SAAS,CAACmB,UAAU,CAAC,CACrBrB,cAAc,CAACqB,UAAU,CAAC,CAC5B,CAAC,CAID,mBACFxB,IAAA,QAAAyB,QAAA,cAGIzB,IAAA,CAACJ,aAAa,EACZ8B,WAAW,CAAC,iBAAiB,CAC7BC,eAAe,CAAE,GAAI,CACrBV,KAAK,CAAEb,MAAO,CACdwB,QAAQ,CAAEL,cAAe,CACzBjB,WAAW,CAAEA,WAAY,CAEvB,CAAC,CAGA,CAAC,CAIV,CAAC,CAED,cAAe,CAAAL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}