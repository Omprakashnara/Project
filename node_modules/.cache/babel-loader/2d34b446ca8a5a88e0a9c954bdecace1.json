{"ast":null,"code":"// LoginPage.js\nimport React,{useState}from'react';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LoginPage(_ref){let{userData,onNavigate}=_ref;const[formData,setFormData]=useState({username:'',password:''});const[error,setError]=useState('');const handleChange=e=>{const{name,value}=e.target;setFormData(prevState=>({...prevState,[name]:value}));};const handleSubmit=e=>{var _formData$username,_userData$email,_formData$password,_userData$password;e.preventDefault();// Here you can add your login logic\n// For simplicity, let's assume the username is the email for the signup\nconst s1=(_formData$username=formData.username)===null||_formData$username===void 0?void 0:_formData$username.toString();const s2=(_userData$email=userData.email)===null||_userData$email===void 0?void 0:_userData$email.toString();const p1=(_formData$password=formData.password)===null||_formData$password===void 0?void 0:_formData$password.toString();const p2=(_userData$password=userData.password)===null||_userData$password===void 0?void 0:_userData$password.toString();if(s2.length===0&&p2.length===0){onNavigate('Navigation');}if(s1===s2&&p1===p2){console.log('Login successful');// Reset error state if login is successful\nsetError('');onNavigate('Navigation');}else{console.log('Invalid username or password');setError('Invalid username or password');}//onNavigate('Navigation');\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"Ltitle\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"sublog\",type:\"submit\",children:\"Login\"})]})]});}export default LoginPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","userData","onNavigate","formData","setFormData","username","password","error","setError","handleChange","e","name","value","target","prevState","handleSubmit","_formData$username","_userData$email","_formData$password","_userData$password","preventDefault","s1","toString","s2","email","p1","p2","length","console","log","children","className","onSubmit","htmlFor","type","id","onChange","required"],"sources":["/Users/saichandanakoganti/Downloads/GoogleMaps/src/LoginPage.js"],"sourcesContent":["// LoginPage.js\nimport React, { useState } from 'react';\nimport './Login.css';\n\nfunction LoginPage({userData,onNavigate}) {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you can add your login logic\n    // For simplicity, let's assume the username is the email for the signup\n    const s1=formData.username?.toString()\n    const s2=userData.email?.toString()\n    const p1=formData.password?.toString()\n    const p2=userData.password?.toString()\n    if(s2.length===0 && p2.length===0){\n      onNavigate('Navigation');\n    }\n    if (s1===s2 && p1===p2) {\n      console.log('Login successful');\n      // Reset error state if login is successful\n      setError('');\n      onNavigate('Navigation');\n    } else {\n      console.log('Invalid username or password');\n      setError('Invalid username or password');\n    }\n    //onNavigate('Navigation');\n  };\n\n  return (\n    <div>\n      <h2 className='Ltitle'>Login</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Login form fields */}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input type=\"text\" id=\"username\" name=\"username\" value={formData.username} onChange={handleChange} required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input type=\"password\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        <button className=\"sublog\" type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}